DELIMITER //

CREATE PROCEDURE load_silver()
BEGIN

select ' truncating the table: silver_crm_cust_info';
truncate table silver_crm_cust_info;
select '>> Inserting data into: silver_crm_cust_info';
insert into silver_crm_cust_info (
		cst_id,
		cst_key,
		cst_firstname,
		cst_lastname,
		cst_gender,
		cst_marital_status,
		cst_create_date)
	select cst_id, cst_key, trim(cst_firstname) as cst_firstname, trim(cst_lastname) as cst_lastname,
	case when upper(trim(cst_gender)) = 'F' then 'female'
		when upper(trim(cst_gender)) = 'M' then 'Male'
		else 'N/A'
	end cst_gender,
	case when upper(trim(cst_marital_status)) = 'M' then 'Married'
		when upper(trim(cst_marital_status)) = 'S' then 'Single'
		else 'N/A'
	end cst_marital_status,
	cst_create_date
	from (
		select *, Row_number() over (partition by cst_id order by cst_create_date desc) as flag_last
			FROM (
			SELECT * 
			FROM bronze_crm_cust_info
			WHERE cst_id is not null
            and cst_id != 0
            ) as filtered_data ) as t
	where flag_last = 1;
    
############################################################
select ' truncating the table: silver_crm_prd_info';
truncate table silver_crm_prd_info;
select '>> Inserting data into: silver_crm_prd_info';
Insert into silver_crm_prd_info (
	prd_id,
	cat_id,
	prd_key,
	prd_name,
	prd_cost,
	prd_line,
	prd_start_dt,
	prd_end_dt)
select
prd_id,
replace(substring(prd_key, 1, 5), '-', '_') as cat_id,
substring(prd_key, 7, length(prd_key)) as prd_key,
prd_name,
ifnull (prd_cost, 0) as prd_cost,
case 
	when upper(trim(prd_line)) = 'M' then 'Mountain'
    when upper(trim(prd_line)) = 'R' then 'Road'
    when upper(trim(prd_line)) = 'S' then 'Sales other'
    when upper(trim(prd_line)) = 'T' then 'Touring'
    else 'n/a'
end as prd_line,
cast(prd_start_dt as date) as prd_start_dt, -- no spaces between cast and parenthesis 
cast(lead (prd_start_dt) over (partition by prd_key order by prd_start_dt) - interval 1 day as date) as prd_end_dt
from bronze_crm_prd_info;


############################################################
select ' truncating the table: silver_crm_sales_details';
truncate table silver_crm_sales_details;
select '>> Inserting data into: silver_crm_sales_details';
insert into silver_crm_sales_details (
	sls_ord_num,
	sls_prd_key,
	sls_cust_id,
	sls_order_dt,
	sls_ship_dt,
	sls_due_dt,
	sls_sales,
	sls_quantity,
	sls_price
)
select
sls_ord_num,
sls_prd_key,
sls_cust_id,
case 
	when sls_order_dt = 0 or length(sls_order_dt) != 8 then null
	else cast(sls_order_dt as date)
end as sls_order_dt,
case 
	when sls_ship_dt = 0 or length(sls_ship_dt) != 8 then null
	else cast(sls_ship_dt as date)
end as sls_ship_dt,
case 
	when sls_due_dt = 0 or length(sls_due_dt) != 8 then null
	else cast(sls_due_dt as date)
end as sls_due_dt,
case
	when sls_sales is null or sls_sales <=0 or sls_sales != sls_quantity * abs(sls_price) and sls_price != 0
		then sls_quantity * abs(sls_price)
	else sls_sales
end sls_sales,
sls_quantity,
case
	when sls_price is null or sls_price <=0 
		then sls_sales / ifnull(sls_quantity, 0)
	else sls_price
end sls_price
from bronze_crm_sales_details;


############################################################
select ' truncating the table: silver_erp_cust_az12';
truncate table silver_erp_cust_az12;
select '>> Inserting data into: silver_erp_cust_az12';
insert into silver_erp_cust_az12 (
CID,
Bdate,
Gen
)
select
case when CID like 'NAS%' then substring(cid, 4, length(CID))
	else CID
end as CID,
case when bdate > now() then null 
	else bdate
end bdate,
  CASE 
    WHEN cleaned_gen IN ('F', 'FEMALE') THEN 'Female'
    WHEN cleaned_gen IN ('M', 'MALE') THEN 'Male'
    ELSE 'N/A'
  END as GEN
FROM (
  SELECT *, 
    UPPER(TRIM(REPLACE(REPLACE(REPLACE(CAST(gen AS CHAR CHARACTER SET latin1), CHAR(160), ''), CHAR(10), ''), CHAR(13), ''))) AS cleaned_gen
  FROM bronze_erp_cust_az12
) AS sub;



############################################################
select ' truncating the table: silver_erp_loc_a101';
truncate table silver_erp_loc_a101;
select '>> Inserting data into: silver_erp_loc_a101';
insert into silver_erp_loc_a101 (
CID,
CNTRY
)
SELECT
  REPLACE(CID, '-', '') AS CID,
  CASE 
    WHEN UPPER(TRIM(REPLACE(CNTRY, CHAR(13), ''))) = 'DE' THEN 'Germany'
    WHEN UPPER(TRIM(REPLACE(CNTRY, CHAR(13), ''))) IN ('US', 'USA') THEN 'United States'
    WHEN CNTRY IS NULL OR TRIM(REPLACE(CNTRY, CHAR(13), '')) = '' THEN 'N/A'
    ELSE TRIM(REPLACE(CNTRY, CHAR(13), ''))
  END AS CNTRY
FROM bronze_erp_loc_a101;

############################################################
select ' truncating the table: silver_erp_px_cat_g1v2';
truncate table silver_erp_px_cat_g1v2;
select '>> Inserting data into: silver_erp_px_cat_g1v2';
insert into silver_erp_px_cat_g1v2 (
ID,
CAT,
SUBCAT,
MAINTENANCE
)
select
ID,
CAT,
SUBCAT,
MAINTENANCE
from bronze_erp_px_cat_G1V2;

END //

DELIMITER ;
